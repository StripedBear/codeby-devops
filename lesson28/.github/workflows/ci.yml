name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-hello-world:
    runs-on: ubuntu-latest
    name: Build and Test Hello World
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven packages for Hello World
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-world-${{ hashFiles('hello-world/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: hello-world
        run: mvn clean install

      - name: Run Tests
        working-directory: hello-world
        run: mvn test

      - name: Save Maven Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hello-world-artifact
          path: hello-world/target/*.jar

      - name: Build Docker Image
        working-directory: hello-world
        run: docker build -t hello-world-app:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/hello-world-app:${{ github.sha }}

  build-hello-jenkins:
    runs-on: ubuntu-latest
    name: Build and Test Hello Jenkins
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven packages for Hello Jenkins
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jenkins-${{ hashFiles('hello-jenkins/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: hello-jenkins
        run: mvn clean install

      - name: Run Tests
        working-directory: hello-jenkins
        run: mvn test

      - name: Save Maven Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hello-jenkins-artifact
          path: hello-jenkins/target/*.jar

      - name: Build Docker Image
        working-directory: hello-jenkins
        run: docker build -t hello-jenkins-app:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/hello-jenkins-app:${{ github.sha }}

  build-hello-devops:
    runs-on: ubuntu-latest
    name: Build and Test Hello DevOps
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Maven packages for Hello DevOps
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-devops-${{ hashFiles('hello-devops/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: hello-devops
        run: mvn clean install

      - name: Run Tests
        working-directory: hello-devops
        run: mvn test

      - name: Save Maven Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hello-devops-artifact
          path: hello-devops/target/*.jar

      - name: Build Docker Image
        working-directory: hello-devops
        run: docker build -t hello-devops-app:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository }}/hello-devops-app:${{ github.sha }}
